%% 행렬에 대하여
A = [1 1; 1 1]; %행렬선언- 벡터와 벡터를 서로 세로벡터선언처럼하기
B = [1 2; 3 4]

B(1, 2) %인덱싱하는 방법 -- 일반적인 행렬의 순서대로 접근(column-wise기준=세로방향)

whos B %whos 메소드: 변수,행렬,벡터 등의 정보를 알려주는 메소드!

%% 인덱싱+
B(1,:) %여러 개의 부분을 인덱싱하기
C = [1 2 3 4 5 6 ; 7 8 9 10 11 12;13 14 15 16 17 18];
whos C;
C(1:2,3:5) %인덱스와 칼럼 한번에 제어하기

%% 함수를 사용하여 만드는 matrix
%help ones --사용법을 볼수있는함수 help (함수이름) 보통 밑부분에 사용예시가 나온다.

unos = ones(2,3,'int8');
D = ones(1,5);
E = ones(4,1);

% eyes
%help eye 으로 알아보자: Identity Matrix! 단위행렬이다!!
eye(2)
eye(2,3)
eye(4)
%eye-dentity 이런 개드립인건가,,,,ㅋㅋㅋㅋㅋㅋ

% zeros - 감이오지?
zeros(2)
zeros(5);

% 쫌 더 활용
0.3*ones(2,4);
0.8*eye(3);

F = ones(100,80);

%% 행렬 끼리의 연산 내적곱, 요소끼리의 곱
A = [3,3;3,3];
B = [2,2;2,2];
C = A*B %요소끼리의 곱이 아닌, 행렬의 내적곱연산!

%요소끼리의 곱을 하려면 .*을 하면 된다!!!
G = A.*B;

